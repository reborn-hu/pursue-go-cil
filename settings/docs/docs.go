// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/user/autoMigrate": {
            "post": {
                "description": "AutoMigrateHandler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AutoMigrateHandler"
                ],
                "summary": "创建数据表",
                "responses": {
                    "200": {
                        "description": "回调对象",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/user/create": {
            "post": {
                "description": "CreateUserManageHandler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CreateUserManageHandler"
                ],
                "summary": "授权应用管理",
                "parameters": [
                    {
                        "description": "授权请求对象",
                        "name": "Authorize",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserManageReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "回调对象",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/user/query": {
            "get": {
                "description": "QueryUserManageListHandler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QueryUserManageListHandler"
                ],
                "summary": "查询授权应用列表",
                "responses": {
                    "200": {
                        "description": "回调对象",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/user/query/:page/:size": {
            "get": {
                "description": "QueryUserManagePageHandler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "QueryUserManagePageHandler"
                ],
                "summary": "查询授权应用分页列表",
                "responses": {
                    "200": {
                        "description": "回调对象",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/user/update": {
            "post": {
                "description": "UpdateUserManageHandler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UpdateUserManageHandler"
                ],
                "summary": "授权应用管理",
                "parameters": [
                    {
                        "description": "授权请求对象",
                        "name": "Authorize",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserManageDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "回调对象",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "user.UserManageDetails": {
            "type": "object"
        },
        "user.UserManageReq": {
            "type": "object",
            "required": [
                "audience",
                "key",
                "name"
            ],
            "properties": {
                "accessExpires": {
                    "description": "accessToken有效时间",
                    "type": "integer"
                },
                "audience": {
                    "description": "授信应用Code或域名",
                    "type": "string"
                },
                "key": {
                    "description": "应用Key",
                    "type": "string"
                },
                "name": {
                    "description": "授信应用名称",
                    "type": "string"
                },
                "refreshExpires": {
                    "description": "refreshToken有效时间",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:50001",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "API接口文档",
	Description:      "API接口文档",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
